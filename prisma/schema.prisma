// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                   String                @id @default(cuid())
  address              String                @unique
  transferTransactions TransferTransaction[]
  projects             Project[]
  projectBacker        ProjectBacker[]

  @@map("user")
}

model TransferTransaction {
  id        String   @id @default(cuid())
  signature String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")

  @@map("transfer_transactions")
}

model Image {
  id        String  @id @default(cuid())
  url       String
  projectId String  @map("project_id")
  project   Project @relation(fields: [projectId], references: [id])

  @@map("images")
}

model ProjectBacker {
  id        String   @id @default(cuid())
  projectId String   @map("project_id")
  project   Project  @relation(fields: [projectId], references: [id])
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  amount    Int
  createdAt DateTime @default(now()) @map("created_at")

  @@unique([projectId, userId])
  @@map("project_backers")
}

model Project {
  id            String          @id @default(cuid())
  name          String
  description   String
  baseNotes     String[]        @default([]) @map("base_notes")
  heartNotes    String[]        @default([]) @map("middle_notes")
  topNotes      String[]        @default([]) @map("top_notes")
  budgetInSol   Int             @default(30000) @map("budget_in_sol")
  tokenNumber   Int             @default(0) @map("token_number")
  boughtTokens  Int             @default(0) @map("bought_tokens")
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @map("user_id")
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @default(now()) @updatedAt @map("updated_at")
  images        Image[]
  projectBacker ProjectBacker[]

  @@map("projects")
}
